generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  username String @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quote Quote[]
}

model Quote {
  id Int @id @default(autoincrement())
  name String @unique
  url_path String @unique
  language_id Int
  currency_id Int
  user_id Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User User @relation(fields: [user_id], references: [id], onDelete: NoAction)
  Currency Currency @relation(fields: [currency_id], references: [id], onDelete: NoAction)
  Language Language @relation(fields: [language_id], references: [id], onDelete: NoAction)
  Quote_Product Quote_Product []
}

model Product {
  id Int @id @default(autoincrement())
  name_es String @unique
  name_en String @unique
  base_price_cop Int
  base_price_usd Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Quote_Product Quote_Product []
}

model Quote_Product {
  id Int @id @default(autoincrement())
  product_id Int
  quote_id Int
  product_text String
  product_price Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
  Quote Quote @relation(fields: [quote_id], references: [id], onDelete: Cascade)
}

model Currency {
  id Int @id @default(autoincrement())
  name String @unique
  acronym String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quote Quote[]
}

model Language {
  id Int @id @default(autoincrement())
  name String @unique
  acronym String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  quote Quote[]
}
